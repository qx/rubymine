<templateSet group="Ruby">
  <template name="login_json" value="    let(:user){double(:id =&gt; '1')}&#10;    let (:json) {{:format =&gt; 'json'}}&#10;    before(:each) do&#10;      allow(controller).to receive(:current_user).and_return(user)&#10;    end" description="before-login_json" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="RUBY" value="true" />
    </context>
  </template>
  <template name="resp" value="  @$user$ = $User$.find(params[:id])&#10;    respond_to do |format|&#10;      if @$user$&#10;        format.html { render :nothing =&gt; true }&#10;        format.js { render partial: &quot;manage/edit_$user$&quot;, :object =&gt; @$user$ }&#10;      else&#10;        format.html { render :nothing =&gt; true }&#10;        format.json { render :show }&#10;      end&#10;    end" description="respond html js" toReformat="false" toShortenFQNames="true">
    <variable name="user" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="User" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="RUBY" value="true" />
    </context>
  </template>
  <template name="script" value="#!/usr/bin/env ruby&#10;# coding: utf-8&#10;require 'fileutils'&#10;require 'optparse'&#10;require &quot;pathname&quot;&#10;require 'colorize'&#10;&#10;options = {}&#10;OptionParser.new do |opt|&#10;  opt.banner = &quot;$describe$&quot;.green&#10;&#10;  opt.on(&quot;-s: 源文件夹 &quot;) {|o| options[:src] = o}&#10;  opt.on(&quot;-d: 目标文件夹&quot;) {|o| options[:des] = o}&#10;&#10;end.parse!&#10;puts &quot;src:#{options[:src]},des:#{options[:des]}&quot;&#10;&#10;# 按序执行&#10;if FileUtils.mv(options[:src].to_s, options[:des].to_s)&#10;  puts &quot;des:#{options[:des].to_s+&quot;/&quot;+Pathname.new(options[:src].to_s).basename.to_s},src:#{options[:src]}&quot;&#10;  FileUtils.ln_s(options[:des].to_s+&quot;/&quot;+Pathname.new(options[:src].to_s).basename.to_s, options[:src].to_s)&#10;end" description="create script" toReformat="false" toShortenFQNames="true">
    <variable name="describe" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="RUBY" value="true" />
    </context>
  </template>
</templateSet>